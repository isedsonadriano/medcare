import { Directive, forwardRef } from '@angular/core';
import { NG_VALIDATORS } from '@angular/forms';
import { cep } from './validator';
import * as ɵngcc0 from '@angular/core';
const CEP_VALIDATOR = {
    provide: NG_VALIDATORS,
    // tslint:disable-next-line: no-use-before-declare
    useExisting: forwardRef(() => CEPValidator),
    multi: true
};
export class CEPValidator {
    validate(c) {
        return cep(c);
    }
}
CEPValidator.ɵfac = function CEPValidator_Factory(t) { return new (t || CEPValidator)(); };
CEPValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CEPValidator, selectors: [["", "cep", "", "formControlName", ""], ["", "cep", "", "formControl", ""], ["", "cep", "", "ngModel", ""]], features: [ɵngcc0.ɵɵProvidersFeature([CEP_VALIDATOR])] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CEPValidator, [{
        type: Directive,
        args: [{
                // tslint:disable-next-line:directive-selector
                selector: '[cep][formControlName],[cep][formControl],[cep][ngModel]',
                providers: [CEP_VALIDATOR]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9uZy1icmF6aWwvc3JjL2NlcC9kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdEQsT0FBTyxFQUFFLGFBQWEsRUFBOEIsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sYUFBYSxDQUFDOztBQUVsQyxNQUFNLGFBQWEsR0FBUTtJQUN6QixPQUFPLEVBQUUsYUFBYTtJQUN0QixrREFBa0Q7SUFDbEQsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUM7SUFDM0MsS0FBSyxFQUFFLElBQUk7Q0FDWixDQUFDO0FBT0YsTUFBTSxPQUFPLFlBQVk7SUFDdkIsUUFBUSxDQUFDLENBQWtCO1FBQ3pCLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hCLENBQUM7OztDQUNGLHlDQVRBLFNBQVMsU0FBQyxrQkFDVCw4Q0FBOEMsaUJBQzlDLFFBQVEsRUFBRSwwREFBMEQsa0JBQ3BFLFNBQVMsRUFBRSxDQUFDO0tBQWEsQ0FBQyxjQUMzQjs7Ozs7OzswQkFDSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgZm9yd2FyZFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkdfVkFMSURBVE9SUywgVmFsaWRhdG9yLCBBYnN0cmFjdENvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBjZXAgfSBmcm9tICcuL3ZhbGlkYXRvcic7XG5cbmNvbnN0IENFUF9WQUxJREFUT1I6IGFueSA9IHtcbiAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby11c2UtYmVmb3JlLWRlY2xhcmVcbiAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gQ0VQVmFsaWRhdG9yKSxcbiAgbXVsdGk6IHRydWVcbn07XG5cbkBEaXJlY3RpdmUoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6ZGlyZWN0aXZlLXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnW2NlcF1bZm9ybUNvbnRyb2xOYW1lXSxbY2VwXVtmb3JtQ29udHJvbF0sW2NlcF1bbmdNb2RlbF0nLFxuICBwcm92aWRlcnM6IFtDRVBfVkFMSURBVE9SXVxufSlcbmV4cG9ydCBjbGFzcyBDRVBWYWxpZGF0b3IgaW1wbGVtZW50cyBWYWxpZGF0b3Ige1xuICB2YWxpZGF0ZShjOiBBYnN0cmFjdENvbnRyb2wpOiB7W2tleTogc3RyaW5nXTogYW55fSB7XG4gICAgcmV0dXJuIGNlcChjKTtcbiAgfVxufVxuIl19